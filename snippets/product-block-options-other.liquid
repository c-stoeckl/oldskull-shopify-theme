{%- liquid
  comment
    Renders non-color options for a product block (text or visual swatches).

    Parameters:
    - product {Object} - The main product object.
    - product_option {Object} - The specific option object (e.g., product.options_with_values[1]).
    - is_text_swatch {Boolean} - True if options should be rendered as text, false for visual swatches.
    - option_limit {Number} - Max number of swatches to show before "+ remaining" .
    - swatch_loading {String} - 'lazy', 'eager', or 'manual' .
    - settings {Object} - Global theme settings object.
    - compact {Boolean} - Whether the compact view is active.
  endcomment

  assign total_available_options = 0
  assign current_option_limit = option_limit | default: 3

  assign parent_loop_index = 0
  for po_check in product.options_with_values
    if po_check.name == product_option.name
      assign parent_loop_index = forloop.index0
      break
    endif
  endfor
-%}

<div class="product-block-options{% unless is_text_swatch %} product-block-options--swatch{% endunless %}" data-option-name="{{ product_option.name | escape }}">
  <div class="product-block-options__inner">
    {%- if product.options.size == 1 and product_option.values.size == 1 -%}
      {%- comment %} Single variant / single option case {% endcomment -%}
      {%- for variant in product.variants -%}
        {%- liquid
          if compact and forloop.index > current_option_limit and is_text_swatch == false
            break
          endif
          assign swatch_value = variant.options[parent_loop_index]
          assign swatch_value_normalized = swatch_value | replace: '"', '' | downcase
          assign variant_media = variant.featured_media

          if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'variant-images' and variant_media == blank
            continue
          endif
        -%}
        <span
          class="
            product-block-options__item
            {%- unless settings.prod_thumb_options_disable_unavailable or variant.available %} product-block-options__item--unavailable{% endunless %}
            {% if forloop.index > current_option_limit and is_text_swatch == false %} product-block-options__item--truncated{% endif %}
          "
          data-option-item="{{ swatch_value | escape }}"
          {% if variant_media %}
          data-media="{{ variant_media.id }}"
          {% endif %}
          {% if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'swatches' -%}
          data-swatch="{{ swatch_value_normalized }}"
          {% endif %}
          {%- if settings.swatch_source == 'native' and variant.options.first.swatch.color %}
          data-swatch
          style="--swatch-background-color: rgb({{ variant.options.first.swatch.color.rgb }})"
          {%- endif %}>
          <span class="product-block-options__item__text">{{ swatch_value | escape }}</span>
          {% if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'variant-images' and variant_media.preview_image %}
            {%- render 'image'
              , image: variant_media
              , sizes: '36px'
              , widths: '36, 72'
              , custom_aspect_ratio: 1
              , custom_crop: settings.swatch_crop_align
              , loading: swatch_loading
              , fetchpriority: 'low'
            -%}
          {% endif %}
        </span>
      {%- endfor -%}
      {%- assign total_available_options = product.variants.size -%}
      {%- else -%}
      {%- comment %} Multiple options/values case {% endcomment -%}
      {%- for product_option_value in product_option.values -%}
        {%- liquid
          assign swatch_value_normalized = product_option_value | replace: '"', '' | downcase

          if compact and forloop.index > current_option_limit and is_text_swatch == false
            break
          endif

          assign product_option_position_index = product_option.position | minus: 1
          assign option_value_variant = false
          for variant_lookup in product.variants
            if variant_lookup.options[product_option_position_index] == product_option_value
              assign option_value_variant = variant_lookup
              break
            endif
          endfor

          assign is_unavailable = false
          if settings.prod_thumb_options_disable_unavailable
            assign is_unavailable = true
            for variant_avail_check in product.variants
              if variant_avail_check.available and variant_avail_check.options[product_option_position_index] == product_option_value
                assign is_unavailable = false
                break
              endif
            endfor
          endif

          assign variant_image = false
          if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'variant-images'
            if option_value_variant.featured_media
              assign variant_image = option_value_variant.featured_media
            elsif product.featured_media
              assign variant_image = product.featured_media
            endif
            if variant_image == false
              continue
            endif
          endif
        -%}
        <span
          class="
            product-block-options__item
            {% if is_unavailable %} product-block-options__item--unavailable{% endif %}
            {% if forloop.index > current_option_limit and is_text_swatch == false %} product-block-options__item--truncated{% endif %}
          "
          data-option-item="{{ product_option_value | escape }}"
          {% if option_value_variant.featured_media %}
          data-media="{{ option_value_variant.featured_media.id }}"
          {% endif %}
          {% if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'swatches' -%}
          data-swatch="{{ swatch_value_normalized }}"
          {% endif %}
          {%- if settings.swatch_source == 'native' and product_option_value.swatch.color %}
          data-swatch
          style="--swatch-background-color: rgb({{ product_option_value.swatch.color.rgb }})"
          {%- endif %}>
          <span class="product-block-options__item__text">{{ product_option_value | escape }}</span>
          {% if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'variant-images' and variant_image %}
            {%- render 'image'
              , image: variant_image
              , sizes: '36px'
              , widths: '36, 72'
              , custom_aspect_ratio: 1
              , custom_crop: settings.swatch_crop_align
              , loading: swatch_loading
              , fetchpriority: 'low'
            -%}
          {% endif %}
        </span>
      {%- endfor -%}
      {%- assign total_available_options = product_option.values.size -%}
    {%- endif -%}

    {%- comment %} Show "+ remaining" only for truncated visual swatches {% endcomment -%}
    {%- if total_available_options > current_option_limit and is_text_swatch == false -%}
      {%- assign remaining = total_available_options | minus: current_option_limit -%}
      {%- if compact -%}
        <span class="product-block-options__more-label">+ {{ remaining }}</span>
      {%- else -%}
        <span class="product-block-options__more-label">
          {{- 'products.product.more_swatches' | t: count: remaining -}}
        </span>
      {%- endif -%}
    {%- endif -%}
  </div>
</div>