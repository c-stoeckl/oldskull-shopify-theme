{%- liquid
  comment
    Renders non-color options for a product block (text or visual swatches).
    Refactored to reduce duplication between single/multi option cases.

    Parameters:
    - product {Object} - The main product object.
    - product_option {Object} - The specific option object (e.g., product.options_with_values[1]).
    - is_text_swatch {Boolean} - True if options should be rendered as text, false for visual swatches.
    - option_limit {Number} - Max number of swatches to show before "+ remaining".
    - swatch_loading {String} - 'lazy', 'eager', or 'manual'.
    - settings {Object} - Global theme settings object.
    - compact {Boolean} - Whether the compact view is active.
  endcomment

  assign total_available_options = 0
  assign current_option_limit = option_limit | default: 3

  # Determine swatch type based on is_text_swatch
  if is_text_swatch
    assign swatch_type = 'text'
  else
    assign swatch_type = 'image'
  endif

  # Find the position index of this option
  assign parent_loop_index = 0
  for po_check in product.options_with_values
    if po_check.name == product_option.name
      assign parent_loop_index = forloop.index0
      break
    endif
  endfor

  # Determine if we're dealing with a single variant/option case
  assign is_single_variant_option = false
  if product.options.size == 1 and product_option.values.size == 1
    assign is_single_variant_option = true
  endif
-%}

<div class="product-block-options{% unless is_text_swatch %} product-block-options--swatch{% endunless %}" data-option-name="{{ product_option.name | escape }}">
  <div class="product-block-options__inner">
    {%- if is_single_variant_option -%}
      {%- comment %} --- Single variant / single option case --- {% endcomment -%}
      {%- for variant in product.variants -%}
        {%- liquid
          # --- Standardize variables for this item ---
          assign item_loop_index = forloop.index
          assign item_swatch_label = variant.options[parent_loop_index]
          assign item_media = variant.featured_media
          assign item_is_initially_available = variant.available
          assign item_native_swatch_object = variant.options.first.swatch 
          assign item_option_value_object = variant.options[parent_loop_index] 

          # --- Common Logic Block ---
          assign should_break_loop = false
          if compact and item_loop_index > current_option_limit and is_text_swatch == false
             assign should_break_loop = true
          endif
          if should_break_loop
             break
          endif

          assign item_swatch_value_normalized = item_swatch_label | replace: '"', '' | downcase

          assign item_is_truncated = false
          if item_loop_index > current_option_limit and is_text_swatch == false
             assign item_is_truncated = true
          endif

          assign should_continue_due_to_image = false
          if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'variant-images' and item_media == blank
             assign should_continue_due_to_image = true
          endif
          if should_continue_due_to_image
             continue
          endif

          # Availability Calculation (Single Variant Case)
          assign item_is_unavailable = false
          if settings.prod_thumb_options_disable_unavailable and item_is_initially_available == false
             assign item_is_unavailable = true
          endif

          assign item_custom_style = ''
          if settings.swatch_source == 'native' and item_native_swatch_object.color
             assign item_custom_style = '--swatch-background-color: rgb(' | append: item_native_swatch_object.color.rgb | append: ')'
          endif
          # --- End Common Logic Block ---
        -%}

        {%- render 'swatch-item',
          label: item_swatch_label,
          is_unavailable: item_is_unavailable,
          is_truncated: item_is_truncated,
          swatch_value: item_swatch_value_normalized,
          swatch_type: swatch_type,
          image_object: item_media,
          option_item: item_option_value_object,
          custom_style: item_custom_style,
          loading: swatch_loading,
          settings: settings
        -%}
      {%- endfor -%}
      {%- assign total_available_options = product.variants.size -%}

    {%- else -%}
      {%- comment %} --- Multiple options/values case --- {% endcomment -%}
      {%- liquid assign product_option_position_index = product_option.position | minus: 1 -%}
      {%- for product_option_value in product_option.values -%}
        {%- liquid
          # --- Find related variant & determine media ---
          assign option_value_variant = false
          for variant_lookup in product.variants
             if variant_lookup.options[product_option_position_index] == product_option_value
                assign option_value_variant = variant_lookup
                break
             endif
          endfor

          assign determined_media = false
          if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'variant-images'
             if option_value_variant and option_value_variant.featured_media
                assign determined_media = option_value_variant.featured_media
             elsif product.featured_media
                assign determined_media = product.featured_media
             endif
          endif

          # --- Standardize variables for this item ---
          assign item_loop_index = forloop.index
          assign item_swatch_label = product_option_value
          assign item_media = determined_media 
          assign item_is_initially_available = false
          if option_value_variant
             assign item_is_initially_available = option_value_variant.available
          endif
          assign item_native_swatch_object = product_option_value.swatch
          assign item_option_value_object = product_option_value

          # --- Common Logic Block ---
          assign should_break_loop = false
          if compact and item_loop_index > current_option_limit and is_text_swatch == false
             assign should_break_loop = true
          endif
          if should_break_loop
             break
          endif

          assign item_swatch_value_normalized = item_swatch_label | replace: '"', '' | downcase

          assign item_is_truncated = false
          if item_loop_index > current_option_limit and is_text_swatch == false
             assign item_is_truncated = true
          endif

          assign should_continue_due_to_image = false
          if is_text_swatch == false and settings.swatch_source == 'theme' and settings.swatch_method == 'variant-images' and item_media == blank
             assign should_continue_due_to_image = true
          endif
          if should_continue_due_to_image
             continue
          endif

          # Availability Calculation (Multi Option Case - slightly different due to override)
          assign item_is_unavailable = true 
          if option_value_variant and option_value_variant.available
             assign item_is_unavailable = false
          endif
          # Apply override if setting dictates ignoring availability (show all as visually available)
          unless settings.prod_thumb_options_disable_unavailable
             assign item_is_unavailable = false
          endunless

          assign item_custom_style = ''
          if settings.swatch_source == 'native' and item_native_swatch_object.color
             assign item_custom_style = '--swatch-background-color: rgb(' | append: item_native_swatch_object.color.rgb | append: ')'
          endif
          # --- End Common Logic Block ---
        -%}

        {%- comment %} Uses the specifically calculated value for this branch {% endcomment %}
        {%- render 'swatch-item',
          label: item_swatch_label,
          is_unavailable: item_is_unavailable, 
          is_truncated: item_is_truncated,
          swatch_value: item_swatch_value_normalized,
          swatch_type: swatch_type,
          image_object: item_media,
          option_item: item_option_value_object,
          custom_style: item_custom_style,
          loading: swatch_loading,
          settings: settings
        -%}
      {%- endfor -%}
      {%- assign total_available_options = product_option.values.size -%}
    {%- endif -%}

    {%- comment %} Show "+ remaining" only for truncated visual swatches {% endcomment -%}
    {%- assign show_more_label = false -%}
    {%- if total_available_options > current_option_limit -%}
      {%- if is_text_swatch == false -%}
        {%- assign show_more_label = true -%}
      {%- endif -%}
    {%- endif -%}

    {%- if show_more_label -%}
      {%- assign remaining = total_available_options | minus: current_option_limit -%}
      {%- if compact -%}
        <span class="product-block-options__more-label">+ {{ remaining }}</span>
      {%- else -%}
        <span class="product-block-options__more-label">
          {{- 'products.product.more_swatches' | t: count: remaining -}}
        </span>
      {%- endif -%}
    {%- endif -%}
  </div>
</div>
