{%- comment -%}
  Parameters:
    - product {Object} - Product object.
    - no_quick_buy {Boolean} - If true, quick buy buttons are not shown (optional, default is false).
    - no_quick_buy_markup {Boolean} - If true, quick buy button shows, but quick buy container does not (optional, default is false)
    - custom_aspect_ratio {Number} - Aspect ratio to use for images (optional).
    - compact {String} - Show compact version of this block (optional).
    - card_layout {String} - May be 'landscape' or 'portrait' (optional, default is 'portrait').
    - manual_loading {Boolean} - Whether to ensure all images need manually loading with JS (optional).
    - prioritised_loading {Boolean} - Whether to render images immediately, not lazily (optional, default is false).
    - icon_height {Number} - Custom icon height (optional, default is 24).
    - grid {Number} - Desktop grid column count, used for image sizing (option, default is section.settings.grid)

    Usage:
    {% render 'product-block',
      product: product
    %}
{%- endcomment -%}
{%- liquid
  # 1. URL and collection context
  if collection and settings.prod_thumb_url_within_coll and product.collections contains collection
    assign product_url = product.url | within: collection
  else
    assign product_url = product.url
  endif

  # 2. Product images setup
  assign product_images = product.media | where: 'media_type', 'image'
  if settings.prod_thumb_hover_image and product_images.size > 1
    assign show_hover_image = true
  else
    assign show_hover_image = false
  endif
  
  # 3. Grid and layout settings
  assign size_cols_desktop = grid | default: section.settings.grid
  
  # 4. Compact mode settings
  assign compact = compact | default: false
  assign no_swiping = compact
  assign no_quick_buy = no_quick_buy | default: compact
  
  # 5. Variant pricing
  assign cheapest_variant = product.variants | sort: 'price' | first
  
  # 6. Image loading strategy
  if manual_loading
    assign loading = 'manual'
    assign hover_loading = 'manual'
  elsif prioritised_loading
    assign loading = 'eager'
    assign hover_loading = 'lazy'
  else
    assign loading = 'lazy'
    assign hover_loading = 'lazy'
  endif
  
  # 7. Display settings
  if in_predictive_search
    assign show_vendor = settings.quick_search_show_vendor
    assign show_price = settings.quick_search_show_price
  else
    assign show_vendor = section.settings.show_vendor
    assign show_price = true
  endif
  
  # 8. Aspect ratio handling
  if custom_aspect_ratio
    assign custom_aspect_ratio = custom_aspect_ratio | at_least: 0.6
  endif
-%}

<product-block
  class="product-block{% if compact %} product-block--compact{% endif %}{% if card_layout == 'landscape' %} product-block--landscape{% endif %}"
  data-product-id="{{ product.id }}"
>
  <div
    class="block-inner"
    {% if animate %}
      {%- render 'animation-attrs', attrs: 'data-cc-animate', always: true -%}
    {% endif %}
  >
    <div class="block-inner-inner">
      {% if product.featured_media %}
        {%- liquid
          # Check if all images have the same aspect ratio
          assign aspect_ratios_same = true
          for media in product.media offset: 1
            if media.preview_image.aspect_ratio != product.media.first.preview_image.aspect_ratio
              assign aspect_ratios_same = false
              break
            endif
          endfor

          # Determine crop settings
          if settings.prod_thumb_crop
            assign custom_crop = settings.prod_thumb_crop_align
          else
            assign custom_crop = 'contain'
          endif
        -%}
        <div class="image-cont {% if show_hover_image %}image-cont--with-secondary-image {% if aspect_ratios_same %}image-cont--same-aspect-ratio{% endif %}{% endif %}">
          <a
            class="product-link{% if settings.quickbuy_style == 'whole' %}{% unless no_quick_buy %} quickbuy-toggle{% endunless %}{% endif %}"
            href="{{ product_url }}"
            aria-hidden="true"
            tabindex="-1"
          >
            <div class="image-label-wrap">
              <div>
                {%- if show_hover_image -%}
                  <div
                    class="product-block__image product-block__image--primary
                    {%- if product.featured_media.id == product.media.first.id -%} product-block__image--active
                    {%- endif -%}
                    {%- if product_images.last.id == product.featured_media.id -%} product-block__image--show-on-hover
                    {%- endif -%}"
                    data-media-id="{{ product.media.first.id }}"
                  >
                    {%- render 'image' with product.media.first.preview_image,
                      loading: loading,
                      size_cols_mobile: 2,
                      size_cols_desktop: size_cols_desktop,
                      custom_aspect_ratio: custom_aspect_ratio,
                      custom_crop: custom_crop
                    -%}
                  </div>
                  {%- assign active_media_found = false -%}
                  {%- if product.featured_media.id == product.media.first.id -%}
                    {%- assign active_media_found = true -%}
                  {%- endif -%}
                  {%- for media in product_images offset: 1 -%}
                    {%- liquid
                      # Simplified image state class logic
                      if media.id == product.featured_media.id
                        assign image_state_class = 'product-block__image--active'
                        assign active_media_found = true
                      elsif active_media_found and forloop.first
                        assign image_state_class = 'product-block__image--show-on-hover product-block__image--inactivated'
                        assign active_media_found = false
                      else
                        assign image_state_class = 'product-block__image--inactivated'
                      endif
                    -%}
                    <div
                      class="product-block__image product-block__image--secondary {{ image_state_class }}"
                      data-media-id="{{ media.id }}"
                      data-image-index="{{ forloop.index }}"
                    >
                      {%- render 'image' with media.preview_image,
                        loading: hover_loading,
                        size_cols_mobile: 2,
                        size_cols_desktop: size_cols_desktop,
                        custom_aspect_ratio: custom_aspect_ratio,
                        custom_crop: custom_crop
                      -%}
                    </div>
                  {%- endfor -%}
                {%- else -%}
                  <div
                    class="product-block__image product-block__image--primary product-block__image--active"
                    data-media-id="{{ product.featured_media.id }}"
                  >
                    {%- render 'image' with product.featured_media.preview_image,
                      loading: loading,
                      size_cols_mobile: 2,
                      size_cols_desktop: size_cols_desktop,
                      custom_aspect_ratio: custom_aspect_ratio,
                      custom_crop: custom_crop
                    -%}
                  </div>
                {%- endif -%}
              </div>
              {%- if show_hover_image -%}
                {%- unless no_swiping -%}
                  <div class="product-block__image-dots" aria-hidden="true">
                    <div class="product-block__image-dot product-block__image-dot--active"></div>
                    <div class="product-block__image-dot"></div>
                    {%- if product_images.size > 2 -%}
                      <div class="product-block__image-dot product-block__image-dot--more"></div>
                    {%- endif -%}
                  </div>
                {%- endunless -%}
              {%- endif -%}
              {%- unless compact -%}
                {%- render 'product-label', product: product, cheapest_variant: cheapest_variant -%}
              {%- endunless -%}
            </div>
          </a>
          {%- if show_hover_image -%}
            <a
              class="image-page-button image-page-button--previous has-ltr-icon"
              href="#"
              aria-label="{{ 'general.slider.previous' | t | escape }}"
              tabindex="-1"
            >
              {%- render 'icon-chevron-left', stroke_width: 1.3 -%}
            </a>
            <a
              class="image-page-button image-page-button--next has-ltr-icon"
              href="#"
              aria-label="{{ 'general.slider.next' | t | escape }}"
              tabindex="-1"
            >
              {%- render 'icon-chevron-right', stroke_width: 1.3 -%}
            </a>
          {%- endif -%}

          {%- if settings.quickbuy_style == 'button' -%}
            {%- unless no_quick_buy -%}
              <a class="btn btn--secondary quickbuy-toggle" href="{{ product_url }}">
                {{- 'products.product.quick_buy' | t -}}
              </a>
            {%- endunless -%}
          {%- endif -%}
        </div>
      {% else %}
        <div class="image-cont">
          <div class="placeholder-image">{{ 'product-1' | placeholder_svg_tag }}</div>

          {%- if settings.quickbuy_style == 'button' -%}
            {%- unless no_quick_buy -%}
              <a class="btn btn--secondary quickbuy-toggle" href="{{ product_url }}">
                {{- 'products.product.quick_buy' | t -}}
              </a>
            {%- endunless -%}
          {%- endif -%}
        </div>
      {% endif %}

      <div class="product-block__detail align-ltr-{{ settings.prod_thumb_text_align }}">
        <div class="inner">
          <div class="innerer">
            <a
              class="product-link{% if settings.quickbuy_style == 'whole' %}{% unless no_quick_buy %} quickbuy-toggle{% endunless %}{% endif %}"
              href="{{ product_url }}"
            >
              {%- if show_vendor -%}
                <div class="vendor">{{ product.vendor | escape }}</div>
              {%- endif -%}

              <div class="product-block__title">{{ product.title | escape }}</div>

              {%- if settings.prod_thumb_show_subtitle and product.metafields.descriptors.subtitle != blank -%}
                <div class="product-block__subtitle">{{ product.metafields.descriptors.subtitle }}</div>
              {%- endif -%}

              {%- if show_price -%}
                <div class="product-price product-price--block">
                  {%- render 'price',
                    product: product,
                    show_currency_code: settings.product_currency_code_enabled,
                    show_labels: true
                  -%}
                </div>
              {%- endif -%}
            </a>

            {%- if settings.swatch_source != 'none' and settings.prod_thumb_show_options and hide_swatches == blank -%}
              {%- liquid
                # Pre-calculate sibling product data
                assign sibling_products_from_metafield = product.metafields.custom.siblings.value | default: ""
                assign product_metafield_color = product.metafields.products.colour.value | default: blank 

                assign valid_sibling_count = 0
                if sibling_products_from_metafield != ""
                  for sibling_item in sibling_products_from_metafield
                    if sibling_item != blank and sibling_item.handle != product.handle
                      assign valid_sibling_count = valid_sibling_count | plus: 1
                    endif
                  endfor
                endif

                # Option display settings
                if card_layout == 'landscape'
                  assign option_limit = 5
                else
                  assign option_limit = 3
                endif
                
                if manual_loading
                  assign swatch_loading = 'manual'
                else
                  assign swatch_loading = 'lazy'
                endif
              -%}

              {%- comment %} Render color swatches based on metafield {% endcomment %}
              {%- if product_metafield_color != blank -%}
                {%- render 'product-block-options-color',
                  product: product,
                  product_metafield_color: product_metafield_color,  
                  sibling_products: sibling_products_from_metafield,
                  valid_sibling_count: valid_sibling_count,
                  option_limit: option_limit,
                  swatch_loading: swatch_loading,
                  settings: settings
                -%}
              {%- endif -%}

              {%- comment %} Loop for other options, skipping color options {% endcomment %}
              {%- capture rendered_option_names_string %}{% endcapture -%}
              {%- assign name_delimiter = '|||' -%}
              {%- for product_option in product.options_with_values -%}
                {%- liquid
                  # Extract base option name (handling parentheses)
                  assign full_option_name = product_option.name
                  assign base_option_name = full_option_name

                  if full_option_name contains '(' and full_option_name contains ')'
                    assign parts_after_paren = full_option_name | split: '(' | last
                    assign potential_base = parts_after_paren | split: ')' | first | strip
                    if potential_base != blank
                      assign base_option_name = potential_base
                    endif
                  endif

                  assign base_option_name_downcased = base_option_name | downcase

                  # Skip color options
                  if base_option_name_downcased == 'color' or base_option_name_downcased == 'colour'
                    continue
                  endif

                  # Skip already rendered options
                  assign rendered_option_names_array = rendered_option_names_string | split: name_delimiter
                  assign already_rendered = false
                  for rendered_name in rendered_option_names_array
                    if rendered_name == base_option_name_downcased
                      assign already_rendered = true
                      break
                    endif
                  endfor

                  if already_rendered
                    continue
                  endif
                  
                  # Add to rendered options list
                  capture rendered_option_names_string
                    echo rendered_option_names_string
                    echo base_option_name_downcased | append: name_delimiter
                  endcapture

                  # Determine if this is a text swatch
                  assign is_text_swatch = true
                  if settings.swatch_source == 'native' and full_option_name == settings.swatch_native_option_name
                    assign is_text_swatch = false
                  endif
                -%}

                {%- comment %} Render non-color options {% endcomment %}
                {%- render 'product-block-options-other',
                  product: product,
                  product_option: product_option,
                  is_text_swatch: is_text_swatch,
                  option_limit: option_limit,
                  swatch_loading: swatch_loading,
                  settings: settings,
                  compact: compact
                -%}
              {%- endfor -%}
            {%- endif -%}

            {%- if settings.enable_product_reviews_collection
               and product.metafields.reviews.rating_count != blank
               and compact == false
             -%}
               {%- assign rating_count = product.metafields.reviews.rating_count | plus: 0 -%}
               {%- if rating_count > 0 -%}
                 <div class="product-block__rating">
                   {% render 'rating', rating_value: product.metafields.reviews.rating.value %}
                   <span class="cc-rating-custom-caption">
                     {{- 'products.product.reviews_count' | t: count: rating_count }}
                   </span>
                 </div>
               {%- endif -%}
             {%- endif -%}
           </div>
         </div>
       </div>
     </div>
   </div>

   {%- if settings.quickbuy_style != 'off' -%}
     {%- unless no_quick_buy_markup or no_quick_buy -%}
       <div class="quickbuy-container use-color-scheme use-color-scheme--{{ settings.quickbuy_color_scheme }}">
         <a href="#" class="close-detail" aria-label="{{ 'accessibility.close' | t }}" tabindex="-1">
           {%- render 'icon-close', stroke_width: 1 -%}
         </a>
         <div class="inner"></div>
       </div>
     {%- endunless -%}
   {%- endif -%}
 </product-block>
